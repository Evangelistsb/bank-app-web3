{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["bankContractAddress","App","_useCelo","useCelo","connect","address","performActions","getConnectedKit","_useState","useState","_useState2","_slicedToArray","account","setAccount","_useState3","_useState4","balance","setBalance","_useState5","_useState6","bankContract","setBankContract","_useState7","_useState8","accountDetails","setAccountDetails","_useState9","_useState10","username","setUsername","_useState11","_useState12","withdrawAmount","setWithdrawAmount","_useState13","_useState14","depositAmount","setDepositAmount","_useState15","_useState16","transferAmount","setTransferAmount","_useState17","_useState18","receiverAdd","setReceiverAdd","_connectWallet","_asyncToGenerator","_regeneratorRuntime","mark","_callee","kit","bal","wrap","_context","prev","next","sent","connection","getBalance","BigNumber","shiftedBy","toFixed","stop","apply","arguments","_getContract","_callee2","contract","_context2","web3","eth","Contract","bankabi","_getAccount","_callee3","details","data","_context3","methods","call","id","lastDeposit","lastTransfer","console","log","t0","_signUp","_callee5","_context5","_ref","_callee4","_context4","createAccount","send","from","defaultAccount","alert","_x","_deposit","_callee7","_context7","_ref2","_callee6","_context6","deposit","value","_x2","_withdraw","_callee9","_context9","_ref3","_callee8","_context8","withdraw","_x3","_transfer","_callee11","_context11","_ref4","_callee10","_context10","transfer","_x4","useEffect","getContract","getAccount","_jsxs","className","children","_Fragment","_jsx","onClick","connectWallet","onChange","e","target","placeholder","signUp","type","Date","toLocaleString","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CeloProvider","dapp","name","description","url","connectionModal","title","StrictMode","document","getElementById"],"mappings":"gOAKMA,EAAsB,6CAmKbC,MAjKf,WACE,IAAAC,EAA6DC,oBAArDC,EAAOF,EAAPE,QAASC,EAAOH,EAAPG,QAASC,EAAcJ,EAAdI,eAAgBC,EAAeL,EAAfK,gBAC1CC,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA8BL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAAlCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAwCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAA4Cb,qBAAUc,EAAAZ,YAAAW,EAAA,GAA/CE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAgCjB,mBAAS,IAAGkB,EAAAhB,YAAAe,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAA4CrB,mBAAS,GAAEsB,EAAApB,YAAAmB,EAAA,GAAhDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA0CzB,mBAAS,GAAE0B,EAAAxB,YAAAuB,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAA4C7B,mBAAS,GAAE8B,EAAA5B,YAAA2B,EAAA,GAAhDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAsCjC,mBAAS,IAAGkC,EAAAhC,YAAA+B,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAEN,SAAAG,IAO3B,OAP2BA,EAAAC,YAAAC,cAAAC,MAA5B,SAAAC,IAAA,IAAAC,EAAAC,EAAApC,EAAA,OAAAgC,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQpD,IAAU,KAAD,SAAAkD,EAAAE,KAAA,EACGjD,IAAiB,OAA1B,OAAH4C,EAAGG,EAAAG,KAAAH,EAAAE,KAAA,EACSL,EAAIO,WAAWC,WAAWtD,GAAQ,OAA9C+C,EAAGE,EAAAG,KACHzC,EAAU,IAAI4C,IAAUR,GAAKS,WAAW,IAAIC,QAAQ,GAC1DjD,EAAWR,GACXY,EAAWD,GAAQ,yBAAAsC,EAAAS,OAAA,GAAAb,EAAA,KACpBJ,EAAAkB,MAAA,KAAAC,UAAA,CAEyB,SAAAC,IAIzB,OAJyBA,EAAAnB,YAAAC,cAAAC,MAA1B,SAAAkB,IAAA,IAAAhB,EAAAiB,EAAA,OAAApB,cAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACoBjD,IAAkB,KAAD,EAA7B4C,EAAGkB,EAAAZ,KACHW,EAAW,IAAIjB,EAAIO,WAAWY,KAAKC,IAAIC,SAASC,EAASzE,GAC/DqB,EAAgB+C,GAAU,wBAAAC,EAAAN,OAAA,GAAAI,EAAA,MAC3BH,MAAA,KAAAC,UAAA,CAEwB,SAAAS,IAexB,OAfwBA,EAAA3B,YAAAC,cAAAC,MAAzB,SAAA0B,IAAA,IAAAC,EAAAC,EAAA,OAAA7B,cAAAK,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAE0BpC,EAAa2D,QAAQvD,iBAAiBwD,OAAO,KAAD,EAA5DJ,EAAOE,EAAArB,KACPoB,EAAO,CACXI,GAAIL,EAAQ,GACZhD,SAAUgD,EAAQ,GAClB5D,QAAS4D,EAAQ,GACjBM,YAAaN,EAAQ,GACrBO,aAAcP,EAAQ,IAExBnD,EAAkBoD,GAClBO,QAAQC,IAAIR,GAAKC,EAAAtB,KAAA,gBAAAsB,EAAAvB,KAAA,EAAAuB,EAAAQ,GAAAR,EAAA,SAEjBM,QAAQC,IAAGP,EAAAQ,IAAG,yBAAAR,EAAAf,OAAA,GAAAY,EAAA,mBAEjBX,MAAA,KAAAC,UAAA,CAasB,SAAAsB,IASpB,OAToBA,EAAAxC,YAAAC,cAAAC,MAArB,SAAAuC,IAAA,OAAAxC,cAAAK,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACQlD,EAAc,eAAAoF,EAAA3C,YAAAC,cAAAC,MAAE,SAAA0C,EAAOxC,GAAG,OAAAH,cAAAK,MAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAArC,KAAA,EAAAqC,EAAApC,KAAA,EAExBpC,EAAa2D,QAAQc,cAAcjE,GAAUkE,KAAK,CAACC,KAAM5C,EAAIO,WAAWsC,iBAAgB,OAC9FC,MAAM,0CAAyCL,EAAApC,KAAA,eAAAoC,EAAArC,KAAA,EAAAqC,EAAAN,GAAAM,EAAA,SAE/CR,QAAQC,IAAGO,EAAAN,IAAG,wBAAAM,EAAA7B,OAAA,GAAA4B,EAAA,kBAEf,gBAAAO,GAAA,OAAAR,EAAA1B,MAAA,KAAAC,UAAA,EAPmB,IAOlB,wBAAAwB,EAAA1B,OAAA,GAAAyB,EAAA,KACHD,EAAAvB,MAAA,KAAAC,UAAA,CAEqB,SAAAkC,KASrB,OATqBA,GAAApD,YAAAC,cAAAC,MAAtB,SAAAmD,IAAA,OAAApD,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACQlD,EAAc,eAAAgG,EAAAvD,YAAAC,cAAAC,MAAE,SAAAsD,EAAOpD,GAAG,OAAAH,cAAAK,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAjD,KAAA,EAAAiD,EAAAhD,KAAA,EAEtBpC,EAAa2D,QAAQ0B,UAAUX,KAAK,CAACC,KAAM5C,EAAIO,WAAWsC,eAAgBU,MAAO,IAAI9C,IAAUxB,GAAeyB,UAAU,MAAK,OACnIoC,MAAM,wCAAuCO,EAAAhD,KAAA,eAAAgD,EAAAjD,KAAA,EAAAiD,EAAAlB,GAAAkB,EAAA,SAE7CpB,QAAQC,IAAGmB,EAAAlB,IAAG,wBAAAkB,EAAAzC,OAAA,GAAAwC,EAAA,kBAEjB,gBAAAI,GAAA,OAAAL,EAAAtC,MAAA,KAAAC,UAAA,EAPmB,IAOlB,wBAAAoC,EAAAtC,OAAA,GAAAqC,EAAA,KACHD,GAAAnC,MAAA,KAAAC,UAAA,CAEsB,SAAA2C,KAStB,OATsBA,GAAA7D,YAAAC,cAAAC,MAAvB,SAAA4D,IAAA,OAAA7D,cAAAK,MAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACQlD,EAAc,eAAAyG,EAAAhE,YAAAC,cAAAC,MAAE,SAAA+D,EAAO7D,GAAG,OAAAH,cAAAK,MAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAA1D,KAAA,EAAA0D,EAAAzD,KAAA,EAEtBpC,EAAa2D,QAAQmC,SAAS,IAAItD,IAAU5B,GAAgB6B,UAAU,KAAKiC,KAAK,CAACC,KAAM5C,EAAIO,WAAWsC,iBAAgB,OAC5HC,MAAM,wCAAuCgB,EAAAzD,KAAA,eAAAyD,EAAA1D,KAAA,EAAA0D,EAAA3B,GAAA2B,EAAA,SAE7C7B,QAAQC,IAAG4B,EAAA3B,IAAG,wBAAA2B,EAAAlD,OAAA,GAAAiD,EAAA,kBAEjB,gBAAAG,GAAA,OAAAJ,EAAA/C,MAAA,KAAAC,UAAA,EAPmB,IAOlB,wBAAA6C,EAAA/C,OAAA,GAAA8C,EAAA,KACHD,GAAA5C,MAAA,KAAAC,UAAA,CAEuB,SAAAmD,KASvB,OATuBA,GAAArE,YAAAC,cAAAC,MAAvB,SAAAoE,IAAA,OAAArE,cAAAK,MAAA,SAAAiE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EACOlD,EAAc,eAAAiH,EAAAxE,YAAAC,cAAAC,MAAE,SAAAuE,EAAOrE,GAAG,OAAAH,cAAAK,MAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAAiE,EAAAlE,KAAA,EAAAkE,EAAAjE,KAAA,EAEtBpC,EAAa2D,QAAQ2C,SAAS9E,EAAa,IAAIgB,IAAUpB,GAAgBqB,UAAU,KAAKiC,KAAK,CAACC,KAAM5C,EAAIO,WAAWsC,iBAAgB,OACzIC,MAAM,wCAAuCwB,EAAAjE,KAAA,eAAAiE,EAAAlE,KAAA,EAAAkE,EAAAnC,GAAAmC,EAAA,SAE7CrC,QAAQC,IAAGoC,EAAAnC,IAAG,wBAAAmC,EAAA1D,OAAA,GAAAyD,EAAA,kBAEjB,gBAAAG,GAAA,OAAAJ,EAAAvD,MAAA,KAAAC,UAAA,EAPmB,IAOlB,wBAAAqD,EAAAvD,OAAA,GAAAsD,EAAA,KACHD,GAAApD,MAAA,KAAAC,UAAA,CAEH,OAtDA2D,qBAAU,YA1BT,WAEyB1D,EAAAF,MAAA,KAAAC,UAAA,CAyBxB4D,EACF,GAAG,IAEHD,qBAAU,WACJxG,GAAgBR,GAzBrB,WAEwB8D,EAAAV,MAAC,KAADC,UAAA,CAwBrB6D,EAEJ,GAAG,CAAC1G,EAAcR,IA+ChBmH,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAChBrH,EAKAmH,eAAAG,WAAA,CAAAD,SAAA,CACEF,eAAA,OAAKC,UAAU,UAASC,SAAA,CAAC,YAAUrH,KACrCmH,eAAA,OAAKC,UAAU,UAASC,SAAA,CAAC,QAAMjH,EAAQ,cANvCmH,cAAA,OAAKH,UAAU,UAAUI,QAAS,kBA5FU,WAEtB,OAAAtF,EAAAkB,MAAC,KAADC,UAAA,CA0FkBoE,EAAe,EAACJ,SAAC,YAWpC,IAAR,OAAdzG,QAAc,IAAdA,OAAc,EAAdA,EAAgByD,IAAS8C,eAAA,OAAAE,SAAA,CAAKE,cAAA,SAAOzB,MAAO9E,EAAU0G,SAAU,SAACC,GAAC,OAAK1G,EAAY0G,EAAEC,OAAO9B,MAAM,EAAE+B,YAAY,wBAAuBN,cAAA,OAAKC,QAAS,kBA5D/H,WAEJ,OAAA7C,EAAAvB,MAAC,KAADC,UAAA,CA0DyIyE,EAAQ,EAAEV,UAAU,UAASC,SAAC,gBACxLF,eAAA,OAAKC,UAAU,IAAGC,SAAA,CAClBF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACnBF,eAAA,OAAAE,SAAA,CACFF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBE,cAAA,QAAAF,SAAM,cAAgBE,cAAA,SAAOzB,MAAO9D,EAAa0F,SAAU,SAACC,GAAC,OAAK1F,EAAe0F,EAAEC,OAAO9B,MAAM,EAAE+B,YAAY,UAAUE,KAAK,SAC1HR,cAAA,QAAAF,SAAM,YAAcE,cAAA,SAAOzB,MAAOlE,EAAgB8F,SAAU,SAAAC,GAAC,OAAI9F,EAAkB8F,EAAEC,OAAO9B,MAAM,EAAE+B,YAAY,SAASE,KAAK,cAEtIR,cAAA,KAAAF,SAAG,8EACQE,cAAA,OAAKC,QAAS,kBApC7B,WAEuB,OAAAhB,GAAApD,MAAC,KAADC,UAAA,CAkCYyD,EAAU,EAAEM,UAAU,yBAAwBC,SAAC,gBAE7EF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CAClBE,cAAA,QAAAF,SAAM,YAAcE,cAAA,SAAOzB,MAAO1E,EAAgBsG,SAAU,SAACC,GAAC,OAAKtG,EAAkBsG,EAAEC,OAAO9B,MAAM,EAAE+B,YAAY,qBAAqBE,KAAK,cAEhJR,cAAA,OAAKC,QAAS,kBApDnB,WAEsB,OAAAxB,GAAA5C,MAAC,KAADC,UAAA,CAkDGiD,EAAU,EAAEc,UAAU,yBAAwBC,SAAC,gBAErEF,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBF,eAAA,KAAAE,SAAA,CAAG,YAAwB,OAAdzG,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,YACjCmG,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CACzBF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBF,eAAA,OAAAE,SAAA,CAAK,iBACY,IAAIW,KAAmC,KAAhB,OAAdpH,QAAc,IAAdA,OAAc,EAAdA,EAAgB0D,cAAoB2D,oBAE5Cd,eAAA,OAAAE,SAAA,CAAK,kBACL,IAAIW,KAAoC,KAAjB,OAAdpH,QAAc,IAAdA,OAAc,EAAdA,EAAgB2D,eAAqB0D,uBAGlEd,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBE,cAAA,KAAAF,SAAG,SACHF,eAAA,OAAAE,SAAA,CAAK,IAAEa,OAAO,IAAIlF,IAAwB,OAAdpC,QAAc,IAAdA,OAAc,EAAdA,EAAgBR,SAAS6C,WAAW,IAAIC,QAAQ,gBAIlFiE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CAChBE,cAAA,QAAAF,SAAM,YAAcE,cAAA,SAAOzB,MAAOtE,EAAekG,SAAU,SAAAC,GAAC,OAAIlG,EAAiBkG,EAAEC,OAAO9B,MAAM,EAAE+B,YAAY,6BAA6BE,KAAK,cAEpJR,cAAA,OAAKC,QAAS,kBAtFnB,WAEqB,OAAAjC,GAAAnC,MAAC,KAADC,UAAA,CAoFIwC,EAAS,EAAEuB,UAAU,wBAAuBC,SAAC,YACjEE,cAAA,OAAKH,UAAU,SAAQC,SAAC,gBAOlC,EC1Jec,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,SAAAxD,GAAkD,IAA/CyD,EAAMzD,EAANyD,OAAQC,EAAM1D,EAAN0D,OAAQC,EAAM3D,EAAN2D,OAAQC,EAAM5D,EAAN4D,OAAQC,EAAO7D,EAAP6D,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,E,gBCFAQ,IAASC,OACLtB,cAACuB,eAAY,CACXC,KAAM,CACJC,KAAK,WACLC,YAAY,6BACZC,IAAK,IAEPC,gBAAiB,CACfC,MAAO7B,cAAA,QAAAF,SAAM,4CACbA,SAEFE,cAAC8B,aAAU,CAAAhC,SACTE,cAAClI,EAAG,QAGRiK,SAASC,eAAe,SAK5BpB,G","file":"static/js/main.75cfcdf9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { useCelo } from \"@celo/react-celo\";\nimport bankabi from \"./contracts/bank.abi.json\";\nimport BigNumber from \"bignumber.js\";\nconst bankContractAddress = \"0xb62632cd205304abF772F4d044889bD5BBe1B56b\"\n\nfunction App() {\n  const { connect, address, performActions, getConnectedKit} = useCelo();\n  const [account, setAccount] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [bankContract, setBankContract] = useState(\"\");\n  const [accountDetails, setAccountDetails] = useState()\n  const [username, setUsername] = useState(\"\")\n\n  const [withdrawAmount, setWithdrawAmount] = useState(0) \n  const [depositAmount, setDepositAmount] = useState(0);\n  const [transferAmount, setTransferAmount] = useState(0)\n  const [receiverAdd, setReceiverAdd] = useState(\"\")\n\n  async function connectWallet() {\n    await connect();\n    const kit = await getConnectedKit()\n    const bal = await kit.connection.getBalance(address)\n    const balance = new BigNumber(bal).shiftedBy(-18).toFixed(2)\n    setAccount(address)\n    setBalance(balance)\n  }\n\n  async function getContract () {\n    const kit = await getConnectedKit();\n    const contract = new kit.connection.web3.eth.Contract(bankabi, bankContractAddress)\n    setBankContract(contract);\n  }\n\n  async function getAccount() {\n    try {\n      const details = await bankContract.methods.accountDetails().call();\n      const data = {\n        id: details[0],\n        username: details[1],\n        balance: details[2],\n        lastDeposit: details[3],\n        lastTransfer: details[4]\n      }\n      setAccountDetails(data)\n      console.log(data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n\n  useEffect(() => {\n    getContract();\n  }, [])\n\n  useEffect(() => {\n    if (bankContract && account) {\n      getAccount()\n    }\n  }, [bankContract, account])\n\n    async function signUp() {\n      await performActions (async (kit) => {\n      try {\n        await bankContract.methods.createAccount(username).send({from: kit.connection.defaultAccount})\n        alert(\"Successful! Reload page to see changes\")\n      } catch (e) {\n        console.log(e)\n      }\n      })\n    }\n\n    async function deposit() {\n      await performActions (async (kit) => {\n        try {\n          await bankContract.methods.deposit().send({from: kit.connection.defaultAccount, value: new BigNumber(depositAmount).shiftedBy(18)})\n          alert(\"Success! Refresh page to see changes\")\n        } catch (e) {\n          console.log(e)\n        }\n      })\n    }\n\n    async function withdraw() {\n      await performActions (async (kit) => {\n        try {\n          await bankContract.methods.withdraw(new BigNumber(withdrawAmount).shiftedBy(18)).send({from: kit.connection.defaultAccount})\n          alert(\"Success! Refresh page to see changes\")\n        } catch (e) {\n          console.log(e)\n        }\n      })\n    }\n\n     async function transfer() {\n      await performActions (async (kit) => {\n        try {\n          await bankContract.methods.transfer(receiverAdd, new BigNumber(transferAmount).shiftedBy(18)).send({from: kit.connection.defaultAccount})\n          alert(\"Success! Refresh page to see changes\")\n        } catch (e) {\n          console.log(e)\n        }\n      })\n    }\n\n  return (\n    <div className=\"App\">\n      {!account ? (\n        <div className=\"connect\" onClick={() => connectWallet()}>\n          Connect\n        </div>\n      ) : (\n        <>\n          <div className=\"address\">Address: {account}</div>\n        <div className=\"address\">Bal: {balance} CELO</div>\n        </>\n      \n      )}\n\n      {accountDetails?.id == 0? <div><input value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Enter your username\"/><div onClick={() => signUp()} className=\"connect\">Sign up </div></div>:\n        <div className=\"m\">\n        <div className=\"left-nav\">\n              <div>\n            <div className=\"input\">\n              <span>Receiver:</span><input value={receiverAdd} onChange={(e) => setReceiverAdd(e.target.value)} placeholder=\"0x12345\" type=\"text\"/>\n                 <span>Amount:</span><input value={transferAmount} onChange={e => setTransferAmount(e.target.value)} placeholder=\"1 CELO\" type=\"number\"/>\n            </div>\n         <p>*Before you transfer, please ensure the receiver is registered on the app</p>\n                    <div onClick={() => transfer()} className=\"button button-transfer\">Transfer</div>\n          </div>\n          <div className=\"input\">\n              <span>Amount:</span><input value={withdrawAmount} onChange={(e) => setWithdrawAmount(e.target.value)} placeholder=\"amount to withdraw\" type=\"number\"/>\n         </div>\n          <div onClick={() => withdraw()} className=\"button button-withdraw\">Withdraw</div>\n </div>\n        <div className=\"main\">\n          <p>Welcome, {accountDetails?.username}</p>\n      <div className=\"main-dashboard\">\n            <div className=\"main-info\">\n              <div>\n                Last deposit: {new Date(accountDetails?.lastDeposit * 1000).toLocaleString()}\n              </div>\n                                <div>\n                Last transfer: {new Date(accountDetails?.lastTransfer * 1000).toLocaleString()}\n              </div>\n            </div>\n            <div className=\"main-bal\">\n              <p>Bal:</p>\n              <div>${Number(new BigNumber(accountDetails?.balance).shiftedBy(-18).toFixed(2))}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"right-nav\">\n        <div className=\"input\">\n              <span>Amount:</span><input value={depositAmount} onChange={e => setDepositAmount(e.target.value)} placeholder=\"deposit amount. e.g 1 CELO\" type=\"number\"/>\n            </div>\n          <div onClick={() => deposit()} className=\"button button-deposit\">Deposit</div>\n          <div className=\"button\">...</div>\n        </div>\n      </div>\n      }\n    \n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CeloProvider } from '@celo/react-celo';\nimport \"@celo/react-celo/lib/styles.css\";\n\nReactDOM.render(\n    <CeloProvider\n      dapp={{\n        name:\"Bank App\",\n        description:\"Access to banking on-chain\",\n        url: \"\"\n      }}\n      connectionModal={{\n        title: <span>Please connect your wallet to continue</span>\n      }}\n      >\n      <StrictMode>\n        <App />\n      </StrictMode>\n    </CeloProvider>,\n    document.getElementById(\"root\")\n  );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}